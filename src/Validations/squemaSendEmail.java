/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Validations;

import Alerts.showAlerts;
import Model.sendEmail;

/**
 *
 * @author sebastian.londono
 */
public class squemaSendEmail extends javax.swing.JPanel {

    /**
     * Creates new form squemaProduct
     */
    showAlerts alerts = new showAlerts();

    public squemaSendEmail() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public boolean validation_addFor(String email) {

        //Email
        if (email.equals("")) {
            alerts.alert("El email es obligatorio");
            return false;
        }

        if (!validateEmail(email)) {
            alerts.alert("El email no es valido");
            return false;
        }

        return true;
    }

    public boolean validation_sendEmail(sendEmail dataEmail) {

        //Subject
        if (dataEmail.getSubject().equals("")) {
            alerts.alert("El asunto es obligatorio");
            return false;
        }
        if (dataEmail.getSubject().length() > 100) {
            alerts.alert("El asunto es máximo de 100 caracteres");
            return false;
        }
        if (dataEmail.getSubject().length() < 3) {
            alerts.alert("El nombre es minimo de 3 caracteres");
            return false;
        }

        //Body
        if (!dataEmail.getBody().equals("") && dataEmail.getBody().length() > 200) {
            alerts.alert("El body es máximo de 200 caracteres");
            return false;
        }

        if (dataEmail.getBody().equals("Cuerpo del mensaje...")) {
            dataEmail.setBody("");
        }

        //Emails
        if (dataEmail.getSendTo().length <= 0) {
            alerts.alert("No ha agregado ningún email");
            return false;
        }

        return true;
    }

    private boolean validateEmail(String email) {
        Object[] optionsEmail = {"@hotmail.com", "@hotmail.es", "@gmail.com", "@yahoo.es", "@yahoo.com", "outlook.com",
            "outlook.es"};

        boolean validation = false;
        for (Object option : optionsEmail) {
            if (email.contains(option.toString())) {
                validation = true;
            }
        }
        return validation;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
