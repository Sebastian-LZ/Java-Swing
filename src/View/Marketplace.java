/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Alerts.showAlerts;
import Controller.marketplaceController;
import Validations.squemaMarketplace;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author sebastian.londono
 */
public class Marketplace extends javax.swing.JInternalFrame {

    /**
     * Creates new form marketplace
     */
    private String coverSelected = "";
    private String wallpaperSelected = "";
    private String urlCoverSelected = "";
    private String urlWallpaperSelected = "";

    marketplaceController controller = new marketplaceController();
    squemaMarketplace squema = new squemaMarketplace();
    showAlerts alerts = new showAlerts();
    DefaultTableModel modelWallpapers;
    DefaultTableModel modelProducts;
    DefaultTableModel modelCovers;
    TableRowSorter modelFilter;

    public Marketplace() {
        initComponents();

        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        loadWallpapers();
        loadProducts();
        loadCovers();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteRow = new javax.swing.JPopupMenu();
        popDelete = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tabPrincipal = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        txtCant = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        btnGenerate1 = new javax.swing.JButton();
        btnCleanOne = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbCant = new javax.swing.JComboBox<>();
        btnGenerate = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        tabOptions = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableWallpapers = new javax.swing.JTable();
        lbPhotoWallpaper = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCover = new javax.swing.JTable();
        lbPhotoCover = new javax.swing.JLabel();

        popDelete.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        popDelete.setText("Borrar");
        popDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popDeleteActionPerformed(evt);
            }
        });
        deleteRow.add(popDelete);

        setPreferredSize(new java.awt.Dimension(700, 500));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("GENERAR CATALOGO");

        tabPrincipal.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Codigo:");

        txtCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodeKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Precio:");

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Cantidad:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Descripci√≥n:");

        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
        });

        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCant, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Precio", "Cant", "Descripcion1", "Descripcion2", "Sel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableProducts.setComponentPopupMenu(deleteRow);
        tableProducts.setRowHeight(22);
        tableProducts.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableProducts);
        if (tableProducts.getColumnModel().getColumnCount() > 0) {
            tableProducts.getColumnModel().getColumn(0).setMinWidth(100);
            tableProducts.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableProducts.getColumnModel().getColumn(0).setMaxWidth(180);
            tableProducts.getColumnModel().getColumn(2).setMinWidth(100);
            tableProducts.getColumnModel().getColumn(2).setPreferredWidth(120);
            tableProducts.getColumnModel().getColumn(2).setMaxWidth(150);
            tableProducts.getColumnModel().getColumn(3).setMinWidth(50);
            tableProducts.getColumnModel().getColumn(3).setPreferredWidth(80);
            tableProducts.getColumnModel().getColumn(3).setMaxWidth(100);
            tableProducts.getColumnModel().getColumn(4).setMinWidth(0);
            tableProducts.getColumnModel().getColumn(4).setPreferredWidth(0);
            tableProducts.getColumnModel().getColumn(4).setMaxWidth(0);
            tableProducts.getColumnModel().getColumn(5).setMinWidth(0);
            tableProducts.getColumnModel().getColumn(5).setPreferredWidth(0);
            tableProducts.getColumnModel().getColumn(5).setMaxWidth(0);
            tableProducts.getColumnModel().getColumn(6).setMinWidth(50);
            tableProducts.getColumnModel().getColumn(6).setPreferredWidth(50);
            tableProducts.getColumnModel().getColumn(6).setMaxWidth(50);
        }

        btnGenerate1.setBackground(new java.awt.Color(46, 204, 113));
        btnGenerate1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnGenerate1.setText("SIGUIENTE");
        btnGenerate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerate1ActionPerformed(evt);
            }
        });

        btnCleanOne.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCleanOne.setText("RESTAURAR REGISTROS");
        btnCleanOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCleanOne, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerate1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnCleanOne, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnGenerate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        tabPrincipal.addTab("Productos", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Cantidad por hoja:");

        cmbCant.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "4" }));
        cmbCant.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCantItemStateChanged(evt);
            }
        });

        btnGenerate.setBackground(new java.awt.Color(46, 204, 113));
        btnGenerate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnGenerate.setText("GENERAR");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        btnClean.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnClean.setText("LIMPIAR");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnBack.setText("ATRAS");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tabOptions.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tableWallpapers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idWallpaper", "Descripcion", "url"
            }
        ));
        tableWallpapers.setRowHeight(24);
        tableWallpapers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableWallpapersMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableWallpapers);
        if (tableWallpapers.getColumnModel().getColumnCount() > 0) {
            tableWallpapers.getColumnModel().getColumn(0).setMinWidth(0);
            tableWallpapers.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableWallpapers.getColumnModel().getColumn(0).setMaxWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setMinWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        lbPhotoWallpaper.setBackground(new java.awt.Color(0, 0, 0));
        lbPhotoWallpaper.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPhotoWallpaper, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbPhotoWallpaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabOptions.addTab("Fondo de pantalla", jPanel5);

        tableCover.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idWallpaper", "Descripcion", "url"
            }
        ));
        tableCover.setRowHeight(24);
        tableCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoverMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCover);
        if (tableCover.getColumnModel().getColumnCount() > 0) {
            tableCover.getColumnModel().getColumn(0).setMinWidth(0);
            tableCover.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableCover.getColumnModel().getColumn(0).setMaxWidth(0);
            tableCover.getColumnModel().getColumn(2).setMinWidth(0);
            tableCover.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableCover.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        lbPhotoCover.setBackground(new java.awt.Color(0, 0, 0));
        lbPhotoCover.setOpaque(true);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPhotoCover, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbPhotoCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabOptions.addTab("Portada", jPanel6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbCant, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(tabOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCant, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tabOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabPrincipal.addTab("Opciones", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(tabPrincipal)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void tableCoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoverMouseClicked
        String urlImage = tableCover.getValueAt(tableCover.getSelectedRow(), 2).toString();
        coverSelected = tableCover.getValueAt(tableCover.getSelectedRow(), 0).toString();
        urlCoverSelected = urlImage;
        ImageIcon fot = new ImageIcon(System.getProperty("user.dir") + "\\Images-client\\Cover-" + urlImage + ".jpg");
        Icon icono = new ImageIcon(fot.getImage().getScaledInstance(lbPhotoCover.getWidth(), lbPhotoCover.getHeight(), Image.SCALE_DEFAULT));
        lbPhotoCover.setIcon(icono);
        this.repaint();
    }//GEN-LAST:event_tableCoverMouseClicked

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        if (squema.validation_marketplace(tableProducts.getRowCount(), urlWallpaperSelected,
                urlCoverSelected)) {
            controller.deleteProduct();
            for (int i = 0; i < tableProducts.getRowCount(); i++) {
                controller.createProduct(i + 1, tableProducts.getValueAt(i, 0).toString());
            }

            Object[][] dataConfig = controller.returnDataConfiguration();
            String nit = dataConfig[0][0].toString();
            String name = dataConfig[0][1].toString();
            String location = dataConfig[0][2].toString();
            String numbers = dataConfig[0][3].toString();
            String email = dataConfig[0][4].toString();
            String webPage = dataConfig[0][5].toString();
            String description = dataConfig[0][6].toString();
            String footer = dataConfig[0][7].toString();

            if (controller.generateMarketplace(urlWallpaperSelected, urlCoverSelected,
                    Integer.parseInt(cmbCant.getSelectedItem().toString()), nit, name, location,
                    numbers, email, webPage, description, footer)) {
                btnCleanActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        clear();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void popDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popDeleteActionPerformed
        if (tableProducts.getSelectedRow() > -1) {
            String code = tableProducts.getValueAt(tableProducts.getSelectedRow(), 0).toString();
            modelFilter.setRowFilter(RowFilter.regexFilter("(?i)" + "", 0));
            for (int i = 0; i < tableProducts.getRowCount(); i++) {
                if (tableProducts.getValueAt(i, 0).equals(code)) {
                    modelProducts.removeRow(i);
                    break;
                }
            }
        } else {
            alerts.alert("Seleccione un producto");
        }
    }//GEN-LAST:event_popDeleteActionPerformed

    private void txtCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodeKeyReleased
        modelFilter.setRowFilter(RowFilter.regexFilter("(?i)" + txtCode.getText(), 0));
        txtCant.setText("");
        txtPrice.setText("");
        txtDescription.setText("");
    }//GEN-LAST:event_txtCodeKeyReleased

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        modelFilter.setRowFilter(RowFilter.regexFilter("(?i)" + txtPrice.getText(), 2));
        txtCant.setText("");
        txtCode.setText("");
        txtDescription.setText("");
    }//GEN-LAST:event_txtPriceKeyReleased

    private void txtCantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyReleased
        modelFilter.setRowFilter(RowFilter.regexFilter("(?i)" + txtCant.getText(), 3));
        txtPrice.setText("");
        txtCode.setText("");
        txtDescription.setText("");
    }//GEN-LAST:event_txtCantKeyReleased

    private void txtDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
        modelFilter.setRowFilter(RowFilter.regexFilter("(?i)" + txtDescription.getText(), 3));
        txtPrice.setText("");
        txtCode.setText("");
        txtCant.setText("");
    }//GEN-LAST:event_txtDescriptionKeyReleased

    private void btnGenerate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerate1ActionPerformed
        if (tableProducts.getRowCount() <= 0) {
            alerts.alert("No hay ning√∫n producto");
            return;
        }

        tabPrincipal.setSelectedIndex(1);
    }//GEN-LAST:event_btnGenerate1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        tabPrincipal.setSelectedIndex(0);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbCantItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCantItemStateChanged
        loadWallpapers();
    }//GEN-LAST:event_cmbCantItemStateChanged

    private void btnCleanOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanOneActionPerformed
        clear();
    }//GEN-LAST:event_btnCleanOneActionPerformed

    private void tableWallpapersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableWallpapersMouseClicked
        String urlImage = tableWallpapers.getValueAt(tableWallpapers.getSelectedRow(), 2).toString();
        wallpaperSelected = tableWallpapers.getValueAt(tableWallpapers.getSelectedRow(), 0).toString();
        urlWallpaperSelected = urlImage;
        ImageIcon fot = new ImageIcon(System.getProperty("user.dir") + "\\Images-client\\" + urlImage + ".jpg");
        Icon icono = new ImageIcon(fot.getImage().getScaledInstance(lbPhotoCover.getWidth(), lbPhotoCover.getHeight(), Image.SCALE_DEFAULT));
        lbPhotoWallpaper.setIcon(icono);
        this.repaint();
    }//GEN-LAST:event_tableWallpapersMouseClicked

    private void loadWallpapers() {
        String tableNames[] = {"idWallpaper", "Descripci√≥n", "imageUrl", "cantPage"};
        String dataBaseName[] = {"idWallpaper", "description", "imageUrl", "cantPage"};
        modelWallpapers = controller.getWallpapersAndCovers("wallpaper", "SELECT idWallpaper, description, imageUrl, cantPage",
                "WHERE cantPage = " + cmbCant.getSelectedItem(), "", tableNames, dataBaseName);

        tableWallpapers.setModel(modelWallpapers);
        if (tableWallpapers.getColumnModel().getColumnCount() > 0) {
            tableWallpapers.getColumnModel().getColumn(0).setMinWidth(0);
            tableWallpapers.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableWallpapers.getColumnModel().getColumn(0).setMaxWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setMinWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableWallpapers.getColumnModel().getColumn(2).setMaxWidth(0);
            tableWallpapers.getColumnModel().getColumn(3).setMinWidth(0);
            tableWallpapers.getColumnModel().getColumn(3).setPreferredWidth(0);
            tableWallpapers.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        lbPhotoWallpaper.setIcon(null);
        this.repaint();
        tabOptions.setSelectedIndex(0);
    }

    private void loadCovers() {
        String tableNames[] = {"idCover", "Descripci√≥n", "imageUrl"};
        String dataBaseName[] = {"idCover", "description", "imageUrl"};
        modelCovers = controller.getWallpapersAndCovers("cover", "SELECT idCover, description, imageUrl",
                "", "", tableNames, dataBaseName);

        tableCover.setModel(modelCovers);
        if (tableCover.getColumnModel().getColumnCount() > 0) {
            tableCover.getColumnModel().getColumn(0).setMinWidth(0);
            tableCover.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableCover.getColumnModel().getColumn(0).setMaxWidth(0);
            tableCover.getColumnModel().getColumn(2).setMinWidth(0);
            tableCover.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableCover.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        lbPhotoCover.setIcon(null);
        this.repaint();
    }

    private void loadProducts() {
        String tableNames1[] = {"Codigo producto", "Descripci√≥n", "Precio", "Cant", "Descripcion1", "Descripcion2"};
        String dataBaseName1[] = {"codeProduct", "description", "price", "cant", "description1", "description2"};
        modelProducts = controller.getProducts("product", "SELECT codeProduct, description, price, cant, "
                + "description1, description2", "", "", tableNames1, dataBaseName1);
        tableProducts.setModel(modelProducts);
        if (tableProducts.getColumnModel().getColumnCount() > 0) {
            tableProducts.getColumnModel().getColumn(2).setMinWidth(100);
            tableProducts.getColumnModel().getColumn(2).setPreferredWidth(120);
            tableProducts.getColumnModel().getColumn(2).setMaxWidth(150);
            tableProducts.getColumnModel().getColumn(3).setMinWidth(50);
            tableProducts.getColumnModel().getColumn(3).setPreferredWidth(80);
            tableProducts.getColumnModel().getColumn(3).setMaxWidth(100);
            tableProducts.getColumnModel().getColumn(4).setMinWidth(0);
            tableProducts.getColumnModel().getColumn(4).setPreferredWidth(0);
            tableProducts.getColumnModel().getColumn(4).setMaxWidth(0);
            tableProducts.getColumnModel().getColumn(5).setMinWidth(0);
            tableProducts.getColumnModel().getColumn(5).setPreferredWidth(0);
            tableProducts.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        modelFilter = new TableRowSorter<>(modelProducts);
        tableProducts.setRowSorter(modelFilter);
    }

    private void clear() {
        loadWallpapers();
        loadCovers();
        loadProducts();
        
        lbPhotoCover.setIcon(null);
        lbPhotoWallpaper.setIcon(null);
        this.repaint();
        
        wallpaperSelected = "";
        coverSelected = "";
        urlWallpaperSelected = "";
        urlCoverSelected = "";
        tabPrincipal.setSelectedIndex(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnCleanOne;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnGenerate1;
    private javax.swing.JComboBox<String> cmbCant;
    private javax.swing.JPopupMenu deleteRow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbPhotoCover;
    private javax.swing.JLabel lbPhotoWallpaper;
    private javax.swing.JMenuItem popDelete;
    private javax.swing.JTabbedPane tabOptions;
    private javax.swing.JTabbedPane tabPrincipal;
    private javax.swing.JTable tableCover;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTable tableWallpapers;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
